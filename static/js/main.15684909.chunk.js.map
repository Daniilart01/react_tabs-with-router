{"version":3,"sources":["App.tsx","components/Tab.tsx","components/TabsPage.tsx","index.tsx"],"names":["App","pathname","useLocation","getTitle","useCallback","path","startsWith","className","to","isActive","classNames","Tab","tab","tabId","useParams","classnames","id","title","tabs","content","TabsPage","find","map","ReactDOM","render","element","index","document","getElementById"],"mappings":"yPAWaA,EAAM,WACjB,IAAQC,EAAaC,cAAbD,SAEFE,EAAWC,uBAAY,SAACC,GAC5B,MAAa,MAATA,EACK,YAGLA,EAAKC,WAAW,SACX,YAGF,gBACR,GAAE,IAEH,OACE,qCAEE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,YAAaD,GADN,EAFb,kBAOA,cAAC,IAAD,CACED,GAAG,QACHD,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cACtC,CAAE,YAAaD,GADN,EAFb,yBAWN,qBAAKF,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,SACGJ,EAASF,KAGZ,cAAC,IAAD,WAKT,ECxDYU,EAAuB,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC7BC,EAAUC,cAAVD,MAER,OACE,oBAAI,UAAQ,MAAMN,UAAWQ,IAAW,CAAE,YAAaF,IAAUD,EAAII,KAArE,SACE,cAAC,IAAD,CACER,GAAE,aAAQI,EAAII,IADhB,SAGGJ,EAAIK,SAIZ,EChBKC,EAAkB,CACtB,CAAEF,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,eACxC,CAAEH,GAAI,QAASC,MAAO,QAASE,QAAS,gBAG7BC,EAAW,WAAO,IAAD,EACpBP,EAAUC,cAAVD,MAER,OAAIA,IAAUK,EAAKG,MAAK,SAACT,GAAD,OAASA,EAAII,KAAOH,CAApB,IACf,cAAC,IAAD,CAAUL,GAAG,OAIpB,qCACE,qBAAKD,UAAU,gBAAf,SACE,6BACGW,EAAKI,KAAI,SAACV,GAAD,OACR,cAAC,EAAD,CAAkBA,IAAKA,GAAbA,EAAII,GADN,QAKd,qBAAKT,UAAU,QAAQ,UAAQ,aAA/B,SAEKM,EAAD,UAEIK,EAAKG,MAAK,SAACT,GAAD,OAASA,EAAII,KAAOH,CAApB,WAFd,aAEI,EAAsCM,QADtC,0BAMb,ECzBDI,IAASC,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOnB,KAAK,IAAIoB,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOpB,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUqB,OAAK,EAACD,QAAS,cAAC,EAAD,QAEvC,cAAC,IAAD,CAAOpB,KAAK,SAEd,cAAC,IAAD,CAAOA,KAAK,QAAQoB,QAAS,cAAC,IAAD,CAAUjB,GAAG,aAG9CmB,SAASC,eAAe,Q","file":"static/js/main.15684909.chunk.js","sourcesContent":["import {\n  NavLink,\n  Outlet,\n  useLocation,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { useCallback } from 'react';\n\nexport const App = () => {\n  const { pathname } = useLocation();\n\n  const getTitle = useCallback((path: string) => {\n    if (path === '/') {\n      return 'Home page';\n    }\n\n    if (path.startsWith('/tabs')) {\n      return 'Tabs page';\n    }\n\n    return 'Page not found';\n  }, []);\n\n  return (\n    <>\n      {/* Also requires <html class=\"has-navbar-fixed-top\"> */}\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'is-active': isActive })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/tabs\"\n              className={({ isActive }) => classNames('navbar-item',\n                { 'is-active': isActive })}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">\n            {getTitle(pathname)}\n          </h1>\n\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import classnames from 'classnames';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Tab as TabType } from '../types/Tab';\n\ntype Props = {\n  tab: TabType;\n};\n\nexport const Tab: React.FC<Props> = ({ tab }) => {\n  const { tabId } = useParams();\n\n  return (\n    <li data-cy=\"Tab\" className={classnames({ 'is-active': tabId === tab.id })}>\n      <NavLink\n        to={`../${tab.id}`}\n      >\n        {tab.title}\n      </NavLink>\n    </li>\n  );\n};\n","import { useParams, Navigate } from 'react-router-dom';\nimport { Tab } from './Tab';\nimport { Tab as TabType } from '../types/Tab';\n\nconst tabs: TabType[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n\n  if (tabId && !tabs.find((tab) => tab.id === tabId)) {\n    return <Navigate to=\"..\" />;\n  }\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <Tab key={tab.id} tab={tab} />\n          ))}\n        </ul>\n      </div>\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          !tabId\n            ? 'Please select a tab'\n            : tabs.find((tab) => tab.id === tabId)?.content\n        }\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './components/TabsPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"tabs\">\n          <Route path=\":tabId?\" index element={<TabsPage />} />\n        </Route>\n        <Route path=\"*\" />\n      </Route>\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}